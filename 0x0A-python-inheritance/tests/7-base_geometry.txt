
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

>>> bg.integer_validator("int", 7.5) #testing floats
Traceback (most recent call last):
...
TypeError: int must be an integer

>>> bg.integer_validator("distance", 0)
Traceback (most recent call last):
...
ValueError: distance must be greater than 0

>>> bg.integer_validator("distance", None)
Traceback (most recent call last):
...
TypeError: distance must be an integer

>>> bg.integer_validator("distance", [5, 6])
Traceback (most recent call last):
...
TypeError: distance must be an integer

>>> bg.integer_validator("distance", (5, 9))
Traceback (most recent call last):
...
TypeError: distance must be an integer

>>> bg.integer_validator("distance", True)
Traceback (most recent call last):
...
TypeError: distance must be an integer

>>> bg.integer_validator('age', 887) # a basic test that's true

>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator('name', True)
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> bg.integer_validator('age', '17')
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator('name', 'Selmun') #testing strings
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> bg.integer_validator('age', -4) # testing negative nums
Traceback (most recent call last):
...
ValueError: age must be greater than 0

>>> bg.area(3)
Traceback (most recent call last):
...
TypeError: BaseGeometry.area() takes 1 positional argument but 2 were given

>>> bg.integer_validator('distance')
Traceback (most recent call last):
...
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'
